import{b,s as x,c as y}from"./constant-2c620e4d.js";import{d as u,a as l,c as d,b as a,e as t,F as $,m as I,t as f,g as i,q as S,s as L,p as _,i as p,_ as v,r as T,v as w,w as C,x as j,f as r}from"./index-a160e559.js";const e=s=>(_("data-v-509c0064"),s=s(),p(),s),P={class:"api-caution"},z=e(()=>a("h2",{class:"h2"},"Constructor",-1)),W=e(()=>a("h3",{class:"h3"},[t(" WebglTransitions( config: "),a("a",{class:"param links"},"Config"),t(") ")],-1)),M=e(()=>a("br",null,null,-1)),N=e(()=>a("a",{class:"links"},"parentId",-1)),D=e(()=>a("br",null,null,-1)),R=e(()=>a("a",{class:"links"},"transitionList",-1)),V=e(()=>a("br",null,null,-1)),E={key:0},A=e(()=>a("br",null,null,-1)),G=e(()=>a("a",{class:"links"},"playPicUrlList",-1)),B=e(()=>a("br",null,null,-1)),O=e(()=>a("a",{class:"links"},"playPicList",-1)),U=e(()=>a("a",{class:"param links"},"new Image()",-1)),F=e(()=>a("br",null,null,-1)),H=e(()=>a("a",{class:"links"},"carouselTime",-1)),q=e(()=>a("b",null,"Unit",-1)),J=e(()=>a("a",null,"ms",-1)),K=e(()=>a("b",null,"Default",-1)),Q=e(()=>a("a",null,"3000",-1)),X=e(()=>a("br",null,null,-1)),Y=e(()=>a("a",{class:"links"},"watchResize",-1)),Z=e(()=>a("b",null,"Default",-1)),aa=e(()=>a("a",null,"false",-1)),ta=e(()=>a("br",null,null,-1)),ea=L('<h2 class="h2" data-v-509c0064>Properties</h2><p data-v-509c0064> See all properties in webgl-transition <a class="links" href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-509c0064>index.ts</a></p><div data-v-509c0064><a class="links" data-v-509c0064>.version</a>: 1.3.1</div><div data-v-509c0064><a class="links" data-v-509c0064>.parentDom</a>: HTMLDivElement.</div><div data-v-509c0064><a class="links" data-v-509c0064>.canvasId</a>: string.</div><div data-v-509c0064><a class="links" data-v-509c0064>.canvas</a>: HTMLCanvasElement.</div><div data-v-509c0064><a class="links" data-v-509c0064>.vsSource</a>: vertex shader source.</div><div data-v-509c0064><a class="links" data-v-509c0064>.fsSource</a>: fragment shader source.</div><div data-v-509c0064><a class="links" data-v-509c0064>.vertexShader</a>: vertex Shader, a WebGLShader.</div><div data-v-509c0064><a class="links" data-v-509c0064>.fragmentShader</a>: fragment Shader, a WebGLShader. </div><div data-v-509c0064><a class="links" data-v-509c0064>.shaderProgram</a>: WebGLProgram.</div><div data-v-509c0064><a class="links" data-v-509c0064>.vertexBuffer</a>: WebGLBuffer.</div><div data-v-509c0064><a class="links" data-v-509c0064>.timer</a>: Transition gap timer. Type: NodeJS.Timeout | undefined | null</div><div data-v-509c0064><a class="links" data-v-509c0064>.playIndex</a>: The number of rotations of the transitions.</div><div data-v-509c0064><a class="links" data-v-509c0064>.playPicIndex</a>: The number of rotations of the pictures.</div><div data-v-509c0064><a class="links" data-v-509c0064>.gl</a>: WebGLRenderingContext.</div><div data-v-509c0064><a class="links" data-v-509c0064>.playPicPreloadList</a>: store preloaded images.</div><div data-v-509c0064><a class="links" data-v-509c0064>.textures</a>: concat playPicUrlList and playPicList, take out 2 images from playPicPreloadList to create textures every times. </div><div data-v-509c0064><a class="links" data-v-509c0064>.playStatus</a>: include playing, pause and stop. </div><div data-v-509c0064><a class="links" data-v-509c0064>.animationId</a>: record the id of the requestAnimationFrame. </div><div data-v-509c0064><a class="links" data-v-509c0064>.assignmentList</a>: set uniform parameters.</div><div data-v-509c0064><a class="links" data-v-509c0064>.resizeObserver</a>: If you set watchResize to true in config, webgl-transition will create an internal listener for you to listen for changes in the size of the parent container and call the onResize method.</div><div data-v-509c0064><a class="links" data-v-509c0064>onResizeCallback</a>: resize callback.</div><h2 class="h2" data-v-509c0064>Methods</h2><p data-v-509c0064> See all methods in webgl-transition <a class="links" href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-509c0064>index.ts</a></p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>main</a> ( ) : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064>Create webgl content and start the animation.</p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>simulatedLostContext</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064> Simulate lost webgl context, canvas will catch the webglcontextlost event and restarts main method in few seconds. </p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>stop</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064>Call clearInterval method but no dispose webgl content.</p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>pause</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064>Set playStatus to pause and call cancelAnimation to cancel this animation and clearNextAnimation to cancel the timer for the next animation.</p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>continue</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064>Continue play the animation, call this after use pause function. </p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>dispose</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064>Release webgl resources.</p><h3 class="h3" data-v-509c0064> .<a class="links" data-v-509c0064>restart</a> () : <span class="param" data-v-509c0064>undefined</span></h3><p data-v-509c0064> Dispose webgl content and recreate a new animation, it will be called automatically when the system sleeps(at most twice). </p><h2 class="h2" data-v-509c0064>Source</h2><p data-v-509c0064><a href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-509c0064>webgl-transition/lib/index.ts</a></p>',41),sa=u({__name:"api-caution",setup(s){return(o,g)=>(l(),d("div",P,[z,W,a("p",null,[t(" Config interface: "),M,N,t(" -- parent node informations, expect to pass a HTMLDIVElement's id."),D,R,t(" -- a collection of animation modules. Import the corresponding animation module to transitionList. The supported types are:"),V,(l(!0),d($,null,I(i(b),(c,h)=>(l(),d("a",{key:h},[t(f(c)+" ",1),h!=i(b).length-1?(l(),d("span",E,"、")):S("",!0)]))),128)),A,G,t(" -- online images src array."),B,O,t(" -- HTMLImageElements array. For example, "),U,t(";"),F,H,t(" -- time between two animations. "),q,t(":"),J,t(". "),K,t(": "),Q,t("."),X,Y,t(" -- listens for parent container size changes and redraws. "),Z,t(": "),aa,t("."),ta,t(" Create a new WebglTransition instance. ")]),ea]))}});const na=v(sa,[["__scopeId","data-v-509c0064"]]),ia=`
    // old version
    import { wind } from "/webgl-transition/dist/transition-types";
    let webglTransitions = new WebglTransitions(
        {
            domId: "#webgl-transition",
        },
        [
            wind
        ], // here
        [
            "http://pic1.zhimg.com/v2-aa528fcd1a5ff3ba4a4a8429d3c11222_r.jpg",
        
            "http://pic1.zhimg.com/v2-4ce925afd994d72a16276bc7fbddf97c_r.jpg",
        ]
    );

    // new version(1.3.1+)
    import { wind } from "webgl-transition";
    const transitionObject: ObjectKey = {
        wind: wind
      };
    const onlineImages = [
        'https://images.pexels.com/photos/127028/pexels-photo-127028.jpeg',
        'https://images.pexels.com/photos/236660/pexels-photo-236660.jpeg',
      ];
    const obj = {
        parentId: '#parentId',
        transitionList: [...transitionObject],
        playPicUrlList: [...onlineImages],
        playPicList: localImages,
        watchResize: true,
      };
      webglTransitions = new WebglTransitions(obj);
      webglTransitions?.main();
`,m=s=>(_("data-v-5661d161"),s=s(),p(),s),oa={class:"version-iteration"},ca=m(()=>a("b",null,"1.3.1",-1)),la=m(()=>a("br",null,null,-1)),da=m(()=>a("i",null,"Ⅰ.",-1)),ra=u({__name:"version-iteration",setup(s){const o=T(!1);return(g,c)=>{const h=w("highlightjs");return l(),d("div",oa,[ca,la,a("p",null,[da,t(" In this version, the initialization parameter is passed in as an object. "),a("a",{onClick:c[0]||(c[0]=Ga=>o.value=!i(o)),class:"cursor"},f(i(o)?"put away":"show more"),1)]),C(r(h,{class:"highlight",language:"js",code:i(ia)},null,8,["code"]),[[j,i(o)]])])}}});const ha=v(ra,[["__scopeId","data-v-5661d161"]]);const _a={},k=s=>(_("data-v-6dfcae18"),s=s(),p(),s),pa={class:"some-tips"},va=k(()=>a("p",null,[t(" Ⅰ."),a("b",null,"Release resources"),t("：Since continuous animation requires higher GPU overhead and consumes more resources as the size of the canvas increases, please call the stop() and dispose() to free the memory when you no longer need the instance"),a("b",{title:"webglTransitions is the WebglTransitions's instance"},"(demo: webglTransitions.stop(); webglTransitions.dispose())"),t(". ")],-1)),ua=k(()=>a("p",null,[t(" Ⅱ. "),a("b",null,"numberOfLostContext"),t("：Since webgl will lose its context when the system or web page sleeps, define this parameter to control the number of times Webgl-transitions should be re-instantiated,it will try twice at most. ")],-1)),ma=[va,ua];function ga(s,o){return l(),d("div",pa,ma)}const ba=v(_a,[["render",ga],["__scopeId","data-v-6dfcae18"]]),n=s=>(_("data-v-87978d99"),s=s(),p(),s),fa={class:"separate-example-code-container"},wa=n(()=>a("h1",null,"webgl-transition documentation(V1.3.1)",-1)),ka=n(()=>a("h3",null,"Api",-1)),xa={class:"code-container"},ya=n(()=>a("br",null,null,-1)),$a=n(()=>a("br",null,null,-1)),Ia=n(()=>a("h3",null,"Version iteration",-1)),Sa={class:"code-container"},La=n(()=>a("br",null,null,-1)),Ta=n(()=>a("br",null,null,-1)),Ca=n(()=>a("h3",null,"Some tips",-1)),ja={class:"code-container"},Pa=n(()=>a("br",null,null,-1)),za=n(()=>a("br",null,null,-1)),Wa=n(()=>a("h3",null,"Create a single transition animation",-1)),Ma=n(()=>a("i",null,"Ⅰ. All pictures from the Internet ",-1)),Na=n(()=>a("a",{href:"https://github.com/jouvychen/webgl-transition-test/blob/demo/src/pages/components/batches-example.vue",target:"_brank"},"online code(demo branch)",-1)),Da={class:"code-container"},Ra=n(()=>a("i",null,"Ⅱ. Mixed mode, with both local and network images",-1)),Va=n(()=>a("a",{href:"https://github.com/jouvychen/webgl-transition-test/blob/demo/src/pages/components/separate-example.vue",target:"_brank"},"online code(demo branch)",-1)),Ea={class:"code-container"},Aa=u({__name:"separate-example-code",setup(s){return(o,g)=>{const c=w("highlightjs");return l(),d("div",fa,[wa,ka,a("div",xa,[r(na)]),ya,$a,Ia,a("div",Sa,[r(ha)]),La,Ta,Ca,a("div",ja,[r(ba)]),Pa,za,Wa,Ma,Na,a("div",Da,[r(c,{class:"highlight",language:"js",code:i(x)},null,8,["code"])]),Ra,Va,a("div",Ea,[r(c,{class:"highlight",language:"js",code:i(y)},null,8,["code"])])])}}});const Ua=v(Aa,[["__scopeId","data-v-87978d99"]]);export{Ua as default};
