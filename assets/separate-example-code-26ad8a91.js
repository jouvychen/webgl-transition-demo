import{b as g,s as y,c as $,d as L}from"./constant-e10f71f1.js";import{d as v,a as c,c as r,b as a,e as s,F as S,m as C,t as b,g as i,q as T,s as w,p as _,i as p,_ as u,r as I,v as k,w as j,x as P,f as l}from"./index-cad53b40.js";const n=t=>(_("data-v-394fdd23"),t=t(),p(),t),W={class:"api-caution"},M=w('<h2 class="h2" data-v-394fdd23>Constructor</h2><h3 class="h3" data-v-394fdd23> WebglTransitions( parent:<a class="param links" data-v-394fdd23>ParentDom</a>, transitionList:<a class="param links" data-v-394fdd23>Transition[]</a>, playPicList:<a class="param links" data-v-394fdd23>string[] | HTMLImageElement[]</a>, carouselTime?:<a class="param links" data-v-394fdd23>number</a>) </h3>',2),V=n(()=>a("a",{class:"links"},"parent",-1)),E=n(()=>a("br",null,null,-1)),N=n(()=>a("a",{class:"links"},"transitionList",-1)),z=n(()=>a("br",null,null,-1)),D={key:0},G=n(()=>a("br",null,null,-1)),B=n(()=>a("a",{class:"links"},"playPicList",-1)),H=n(()=>a("br",null,null,-1)),R=n(()=>a("a",{class:"links"},"carouselTime",-1)),q=n(()=>a("b",null,"Unit",-1)),A=n(()=>a("a",null,"ms",-1)),O=n(()=>a("b",null,"Default",-1)),F=n(()=>a("a",null,"3000",-1)),U=n(()=>a("br",null,null,-1)),J=n(()=>a("br",null,null,-1)),K=w('<h2 class="h2" data-v-394fdd23>Properties</h2><p data-v-394fdd23> See all properties in webgl-transition <a class="links" href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-394fdd23>index.ts</a></p><div data-v-394fdd23><a class="links" data-v-394fdd23>.canvas</a>: HTMLCanvasElement.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.vsSource</a>: vertex shader source.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.fsSource</a>: fragment shader source.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.vertexShader</a>: vertex Shader, a WebGLShader.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.fragmentShader</a>: fragment Shader, a WebGLShader. </div><div data-v-394fdd23><a class="links" data-v-394fdd23>.shaderProgram</a>: WebGLProgram.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.vertexBuffer</a>: WebGLBuffer.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.gl</a>: WebGLRenderingContext.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.playPicPreloadList</a>: store preloaded images.</div><div data-v-394fdd23><a class="links" data-v-394fdd23>.textures</a>: take out 2 images from playPicPreloadList to create textures every times. </div><div data-v-394fdd23><a class="links" data-v-394fdd23>.stopPlaying</a>: indicates whether the current state is stopped. </div><div data-v-394fdd23><a class="links" data-v-394fdd23>.assignmentList</a>: set uniform parameters.</div><h2 class="h2" data-v-394fdd23>Methods</h2><p data-v-394fdd23> See all methods in webgl-transition <a class="links" href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-394fdd23>index.ts</a></p><h3 class="h3" data-v-394fdd23> .<a class="links" data-v-394fdd23>main</a> ( ) : <span class="param" data-v-394fdd23>undefined</span></h3><p data-v-394fdd23>Create webgl content and start the animation.</p><h3 class="h3" data-v-394fdd23> .<a class="links" data-v-394fdd23>simulatedLostContext</a> () : <span class="param" data-v-394fdd23>undefined</span></h3><p data-v-394fdd23> Simulate lost webgl context, canvas will catch the webglcontextlost event and restarts main method in few seconds. </p><h3 class="h3" data-v-394fdd23> .<a class="links" data-v-394fdd23>stop</a> () : <span class="param" data-v-394fdd23>undefined</span></h3><p data-v-394fdd23>Call clearInterval method but no dispose webgl content.</p><h3 class="h3" data-v-394fdd23> .<a class="links" data-v-394fdd23>dispose</a> () : <span class="param" data-v-394fdd23>undefined</span></h3><p data-v-394fdd23>Release webgl resources.</p><h3 class="h3" data-v-394fdd23> .<a class="links" data-v-394fdd23>restart</a> () : <span class="param" data-v-394fdd23>undefined</span></h3><p data-v-394fdd23> Dispose webgl content and recreate a new animation, it will be called automatically when the system sleeps(at most twice). </p><h2 class="h2" data-v-394fdd23>Source</h2><p data-v-394fdd23><a href="https://github.com/jouvychen/webgl-transition/blob/master/lib/index.ts" target="_blank" data-v-394fdd23>webgl-transition/lib/index.ts</a></p>',28),Q=v({__name:"api-caution",setup(t){return(o,f)=>(c(),r("div",W,[M,a("p",null,[V,s(" -- parent node informations, expect to pass a HTMLDIVElement which inincludes id, width(Optional), height(Optional)."),E,N,s(" -- a collection of animation modules. Import the corresponding animation module to transitionList. The supported types are:"),z,(c(!0),r(S,null,C(i(g),(d,h)=>(c(),r("a",{key:h},[s(b(d)+" ",1),h!=i(g).length-1?(c(),r("span",D,"、")):T("",!0)]))),128)),G,B,s(" -- allow online images array or HTMLImageElements array."),H,R,s(" -- time between two animations. "),q,s(":"),A,s(". "),O,s(": "),F,s("."),U,J,s(" Create a new WebglTransition instance. ")]),K]))}});const X=u(Q,[["__scopeId","data-v-394fdd23"]]),Y=`
    // old version
    let webglTransitions = new WebglTransitions(
        {
            domId: "#webgl-transition",
        },
        [
            "wind"
        ],
        [
            "http://pic1.zhimg.com/v2-aa528fcd1a5ff3ba4a4a8429d3c11222_r.jpg",
        
            "http://pic1.zhimg.com/v2-4ce925afd994d72a16276bc7fbddf97c_r.jpg",
        ]
    );

    // new version(1.3.0+)
    import { wind } from "/webgl-transition/dist/transition-types";
    let webglTransitions = new WebglTransitions(
        {
            domId: "#webgl-transition",
        },
        [
            wind
        ], // here
        [
            "http://pic1.zhimg.com/v2-aa528fcd1a5ff3ba4a4a8429d3c11222_r.jpg",
        
            "http://pic1.zhimg.com/v2-4ce925afd994d72a16276bc7fbddf97c_r.jpg",
        ]
    );
`,m=t=>(_("data-v-841313a2"),t=t(),p(),t),Z={class:"version-iteration"},aa=m(()=>a("b",null,"1.3.0",-1)),ta=m(()=>a("br",null,null,-1)),ea=m(()=>a("i",null,"Ⅰ.",-1)),sa=v({__name:"version-iteration",setup(t){const o=I(!1);return(f,d)=>{const h=k("highlightjs");return c(),r("div",Z,[aa,ta,a("p",null,[ea,s(" Considering the size of the packaged products, in version 1.3.0+, transitionList parameter in the constructor has been changed from any[] to Transition[], animations' names will no longer accepted by the transitionList. "),a("a",{onClick:d[0]||(d[0]=za=>o.value=!i(o)),class:"cursor"},b(i(o)?"put away":"show more"),1)]),j(l(h,{class:"highlight",language:"js",code:i(Y)},null,8,["code"]),[[P,i(o)]])])}}});const na=u(sa,[["__scopeId","data-v-841313a2"]]);const ia={},x=t=>(_("data-v-6dfcae18"),t=t(),p(),t),da={class:"some-tips"},oa=x(()=>a("p",null,[s(" Ⅰ."),a("b",null,"Release resources"),s("：Since continuous animation requires higher GPU overhead and consumes more resources as the size of the canvas increases, please call the stop() and dispose() to free the memory when you no longer need the instance"),a("b",{title:"webglTransitions is the WebglTransitions's instance"},"(demo: webglTransitions.stop(); webglTransitions.dispose())"),s(". ")],-1)),la=x(()=>a("p",null,[s(" Ⅱ. "),a("b",null,"numberOfLostContext"),s("：Since webgl will lose its context when the system or web page sleeps, define this parameter to control the number of times Webgl-transitions should be re-instantiated,it will try twice at most. ")],-1)),ca=[oa,la];function ra(t,o){return c(),r("div",da,ca)}const ha=u(ia,[["render",ra],["__scopeId","data-v-6dfcae18"]]),e=t=>(_("data-v-f6f2eb68"),t=t(),p(),t),_a={class:"separate-example-code-container"},pa=e(()=>a("h1",null,"webgl-transition documentation(V1.2.0)",-1)),ua=e(()=>a("h3",null,"Api",-1)),va={class:"code-container"},ma=e(()=>a("br",null,null,-1)),fa=e(()=>a("br",null,null,-1)),ga=e(()=>a("h3",null,"Version iteration",-1)),ba={class:"code-container"},wa=e(()=>a("br",null,null,-1)),ka=e(()=>a("br",null,null,-1)),xa=e(()=>a("h3",null,"Some tips",-1)),ya={class:"code-container"},$a=e(()=>a("br",null,null,-1)),La=e(()=>a("br",null,null,-1)),Sa=e(()=>a("h3",null,"Create a single transition animation",-1)),Ca=e(()=>a("i",null,"Ⅰ. All pictures from the Internet",-1)),Ta={class:"code-container"},Ia=e(()=>a("i",null,"Ⅱ. Mixed mode, with both local and network images",-1)),ja={class:"code-container"},Pa=e(()=>a("br",null,null,-1)),Wa=e(()=>a("br",null,null,-1)),Ma=e(()=>a("h3",null,"Create transition animations in batches",-1)),Va=e(()=>a("p",{class:"long-text"}," Regarding the image type, it is the same with the requirement to create a single transition animation. Just fill some animation's name to the transitionList, then you'll get multiple types of transition animations. ",-1)),Ea={class:"code-container"},Na=v({__name:"separate-example-code",setup(t){return(o,f)=>{const d=k("highlightjs");return c(),r("div",_a,[pa,ua,a("div",va,[l(X)]),ma,fa,ga,a("div",ba,[l(na)]),wa,ka,xa,a("div",ya,[l(ha)]),$a,La,Sa,Ca,a("div",Ta,[l(d,{class:"highlight",language:"js",code:i(y)},null,8,["code"])]),Ia,a("div",ja,[l(d,{class:"highlight",language:"js",code:i($)},null,8,["code"])]),Pa,Wa,Ma,Va,a("div",Ea,[l(d,{class:"highlight",language:"js",code:i(L)},null,8,["code"])])])}}});const Ba=u(Na,[["__scopeId","data-v-f6f2eb68"]]);export{Ba as default};
